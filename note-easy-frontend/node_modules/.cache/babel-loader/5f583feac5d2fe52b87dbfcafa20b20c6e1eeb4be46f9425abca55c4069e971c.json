{"ast":null,"code":"var _jsxFileName = \"/Users/banu/Desktop/note-easy-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: 1,\n    title: 'Note 1',\n    content: 'Content 1'\n  }, {\n    id: 2,\n    title: 'Note 2',\n    content: 'Content 2'\n  }]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/notes');\n        const data = await response.json();\n        setNotes(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching notes', error);\n      }\n    };\n    fetchNotes();\n  });\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"title : \", title);\n    console.log(\"content : \", content);\n    const newNote = {\n      id: notes.length + 1,\n      title,\n      content\n    };\n    setNotes([newNote, ...notes]);\n    setTitle('');\n    setContent('');\n  };\n  const handleUpdateNote = event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    ;\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n    const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n    setNotes(updatedNotesList);\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  };\n  const handleCancel = () => {\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  };\n  const deleteNote = (event, noteId) => {\n    event.stopPropagation();\n    const updatedNotes = notes.filter(note => note.id !== noteId);\n    setNotes(updatedNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => deleteNote(e, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H8p1m4/Poxm4Yjwbw1sIsMq4UMk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","title","content","setTitle","setContent","selectedNote","setSelectedNote","fetchNotes","response","fetch","data","json","console","log","error","handleNoteClick","note","handleSubmit","event","preventDefault","newNote","length","handleUpdateNote","updatedNote","updatedNotesList","map","handleCancel","deleteNote","noteId","stopPropagation","updatedNotes","filter","className","children","onSubmit","e","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/banu/Desktop/note-easy-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([\n    {\n      id: 1,\n      title: 'Note 1',\n      content: 'Content 1'\n    },\n    {\n      id :2,\n      title: 'Note 2',\n      content: 'Content 2'\n    }\n  ]);\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/notes');\n        const data = await response.json();\n        setNotes(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching notes', error);\n      }\n    }\n    fetchNotes();\n  });\n\n  \n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  }\n\n  const handleSubmit = (\n    event: React.FormEvent) => {\n      event.preventDefault();\n      console.log(\"title : \", title);\n      console.log(\"content : \", content);\n\n      const newNote: Note = {\n        id: notes.length + 1,\n        title,\n        content\n      };\n\n      setNotes([newNote, ...notes]);\n      setTitle('');\n      setContent('');\n    }\n\n    const handleUpdateNote = (event : React.FormEvent) => {\n      event.preventDefault();\n      if(!selectedNote){\n        return;\n        };\n      \n\n    const updatedNote: Note = {\n      id: selectedNote.id,\n      title : title,\n      content : content\n    }\n\n    const updatedNotesList = notes.map((note) => note.id === selectedNote.id ? updatedNote : note)\n\n    setNotes(updatedNotesList);\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  };\n\n  const handleCancel = () => {\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  }\n\n  const deleteNote = (event: React.MouseEvent, noteId : number) => {\n    event.stopPropagation();\n\n    const updatedNotes = notes.filter((note) => note.id !== noteId);\n\n    setNotes(updatedNotes);\n  }\n  \n\n  return (\n    <div className=\"app-container\">\n      <form className = \"note-form\"\n      onSubmit={(e) => handleSubmit(e)}>\n        <input value={title} onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Title\" required>\n        </input>\n        <textarea value={content} onChange={(e) => setContent(e.target.value)} placeholder=\"Content\" rows={10} required>\n\n        </textarea>\n\n        {selectedNote ? (\n          <div className='edit-buttons'>\n            <button type=\"submit\">Save</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </div> ) : (\n            <button type=\"submit\">Add Note</button>\n          )}\n\n     \n      </form>\n      <div className =\"notes-grid\">\n        { notes.map((note)=> (\n          <div className=\"note-item\" onClick={() => handleNoteClick(note)}>\n          <div className=\"notes-header\">\n            <button onClick={(e) => deleteNote(e, note.id)}>x</button>\n          </div>\n          <h2>{note.title}</h2>\n          <p>{note.content}</p>\n        </div>\n        ))}\n        \n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}