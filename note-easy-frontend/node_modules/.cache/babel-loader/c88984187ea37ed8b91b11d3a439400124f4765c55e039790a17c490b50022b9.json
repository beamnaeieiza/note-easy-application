{"ast":null,"code":"var _jsxFileName = \"/Users/banu/Desktop/note-easy-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const data = \"\";\n  useEffect(() => {\n    console.log('useEffect is called');\n    const fetchNotes = async () => {\n      try {\n        console.log('test');\n        const response = await fetch('http://localhost:3000/notes');\n        console.log('hello');\n        const data = await response.json();\n        setNotes(data);\n        console.log('data', data);\n      } catch (error) {\n        console.error('Error fetching notes', error);\n      }\n    };\n    fetchNotes();\n  });\n  const handleNoteClick = async note => {\n    try {\n      const response = await fetch(`http://localhost:3000/notes/${note.note_id}`);\n      const data = await response.json();\n      setSelectedNote(data);\n      setTitle(data.text);\n    } catch (error) {\n      console.error('Error fetching note', error);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"title : \", title);\n    console.log(\"content : \", content);\n    const newNote = {\n      note_id: notes.length + 1,\n      customer_id: 1,\n      text: title,\n      createdAt: new Date(),\n      remindAt: new Date(),\n      updatedAt: new Date(),\n      status: true\n    };\n    setNotes([newNote, ...notes]);\n    setTitle('');\n    setContent('');\n  };\n  const handleUpdateNote = event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    ;\n    const updatedNote = {\n      customer_id: selectedNote.customer_id,\n      note_id: selectedNote.note_id,\n      text: title,\n      createdAt: selectedNote.createdAt,\n      remindAt: selectedNote.remindAt,\n      updatedAt: new Date(),\n      status: selectedNote.status\n    };\n    const updatedNotesList = notes.map(note => note.note_id === selectedNote.note_id ? updatedNote : note);\n    setNotes(updatedNotesList);\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  };\n  const handleCancel = () => {\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  };\n  const deleteNote = (event, noteId) => {\n    event.stopPropagation();\n    const updatedNotes = notes.filter(note => note.note_id !== noteId);\n    setNotes(updatedNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), selectedNote && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-note\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedNote.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created at: \", selectedNote.createdAt.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Updated at: \", selectedNote.updatedAt.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", selectedNote.status ? 'Finished' : 'Unfinished']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => deleteNote(e, note.note_id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Customer ID :\", note.customer_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KSRyDJUoiU5fqibLgubE3pMTTe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","data","console","log","fetchNotes","response","fetch","json","error","handleNoteClick","note","note_id","text","handleSubmit","event","preventDefault","newNote","length","customer_id","createdAt","Date","remindAt","updatedAt","status","handleUpdateNote","updatedNote","updatedNotesList","map","handleCancel","deleteNote","noteId","stopPropagation","updatedNotes","filter","className","children","onSubmit","e","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","toString","_c","$RefreshReg$"],"sources":["/Users/banu/Desktop/note-easy-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\ntype Note = {\n  note_id: number;\n  customer_id: number;\n  text: string;\n  createdAt: Date;\n  remindAt: Date;\n  updatedAt: Date;\n  status: boolean;\n\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([\n  ]);\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  const data = \"\";\n\n  useEffect(() => {\n    console.log('useEffect is called');\n    const fetchNotes = async () => {\n      try {\n        console.log('test');\n        const response = await fetch('http://localhost:3000/notes');\n        console.log('hello');\n        const data = await response.json();\n        setNotes(data);\n        console.log('data', data);\n      } catch (error) {\n        console.error('Error fetching notes', error);\n      }\n    }\n    fetchNotes();\n  });\n\n  \n  const handleNoteClick = async (note: Note) => {\n    try {\n      const response = await fetch(`http://localhost:3000/notes/${note.note_id}`);\n      const data = await response.json();\n      setSelectedNote(data);\n      setTitle(data.text);\n    } catch (error) {\n      console.error('Error fetching note', error);\n    }\n  }\n\n  const handleSubmit = (\n    event: React.FormEvent) => {\n      event.preventDefault();\n      console.log(\"title : \", title);\n      console.log(\"content : \", content);\n\n      const newNote: Note = {\n        note_id: notes.length + 1,\n        customer_id: 1,\n        text: title,\n        createdAt: new Date(),\n        remindAt: new Date(),\n        updatedAt: new Date(),\n        status: true\n      };\n\n      setNotes([newNote, ...notes]);\n      setTitle('');\n      setContent('');\n    }\n\n    const handleUpdateNote = (event : React.FormEvent) => {\n      event.preventDefault();\n      if(!selectedNote){\n        return;\n        };\n      \n\n    const updatedNote: Note = {\n      customer_id: selectedNote.customer_id,\n      note_id: selectedNote.note_id,\n      text : title,\n      createdAt: selectedNote.createdAt,\n      remindAt: selectedNote.remindAt,\n      updatedAt: new Date(),\n      status: selectedNote.status\n    }\n\n    const updatedNotesList = notes.map((note) => note.note_id === selectedNote.note_id ? updatedNote : note)\n\n    setNotes(updatedNotesList);\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  };\n\n  const handleCancel = () => {\n    setTitle('');\n    setContent('');\n    setSelectedNote(null);\n  }\n\n  const deleteNote = (event: React.MouseEvent, noteId : number) => {\n    event.stopPropagation();\n\n    const updatedNotes = notes.filter((note) => note.note_id !== noteId);\n\n    setNotes(updatedNotes);\n  }\n  \n\n  return (\n    <div className=\"app-container\">\n      <form className = \"note-form\"\n      onSubmit={(e) => handleSubmit(e)}>\n        <input value={title} onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Title\" required>\n        </input>\n        <textarea value={content} onChange={(e) => setContent(e.target.value)} placeholder=\"Content\" rows={10} required>\n\n        </textarea>\n\n        {selectedNote ? (\n          <div className='edit-buttons'>\n            <button type=\"submit\">Save</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </div> ) : (\n            <button type=\"submit\">Add Note</button>\n          )}\n\n{selectedNote && (\n      <div className=\"selected-note\">\n        <h2>{selectedNote.text}</h2>\n        <p>Created at: {selectedNote.createdAt.toString()}</p>\n        <p>Updated at: {selectedNote.updatedAt.toString()}</p>\n        <p>Status: {selectedNote.status ? 'Finished' : 'Unfinished'}</p>\n      </div>\n    )}\n\n     \n      </form>\n      <div className =\"notes-grid\">\n        { notes.map((note)=> (\n          <div className=\"note-item\" onClick={() => handleNoteClick(note)}>\n          <div className=\"notes-header\">\n            <button onClick={(e) => deleteNote(e, note.note_id)}>x</button>\n          </div>\n          <h2>{note.text}</h2>\n          <p>Customer ID :{note.customer_id}</p>\n          <p></p>\n        </div>\n        ))}\n        \n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}